# Lab Login System - Production Environment Variables Template
# Copy this file to .env.production and update the values

# ==========================================
# SERVER CONFIGURATION
# ==========================================
NODE_ENV=production
PORT=4000

# Update this to your production domain
# Examples:
# HOST=yourdomain.com:4000
# HOST=your-app.railway.app
# HOST=your-app.vercel.app
HOST=localhost:4000

# ==========================================
# SECURITY
# ==========================================
# CRITICAL: Change this to a secure random secret in production
# Generate a secure secret using: openssl rand -base64 32
ADMIN_SECRET=your-secure-admin-secret-here

# ==========================================
# DATABASE
# ==========================================
# For SQLite (default - suitable for small to medium apps)
DATABASE_URL="file:./prisma/production.db"

# For PostgreSQL (recommended for production)
# DATABASE_URL="postgresql://username:password@localhost:5432/lablogin"

# For MySQL (alternative option)
# DATABASE_URL="mysql://username:password@localhost:3306/lablogin"

# ==========================================
# DEPLOYMENT PLATFORM SPECIFIC
# ==========================================

# For Railway deployment:
# HOST=${{RAILWAY_STATIC_URL}}
# DATABASE_URL=${{DATABASE_URL}}

# For Vercel deployment:
# HOST=${{VERCEL_URL}}

# For Render deployment:
# HOST=${{RENDER_EXTERNAL_URL}}

# For Heroku deployment:
# HOST=${{HEROKU_APP_NAME}}.herokuapp.com

# ==========================================
# OPTIONAL FEATURES
# ==========================================

# Rate limiting (requests per window)
RATE_LIMIT_WINDOW_MS=15000
RATE_LIMIT_MAX_REQUESTS=100

# CORS origins (comma-separated)
CORS_ORIGINS=http://localhost:5173,https://yourdomain.com

# File upload limits
MAX_FILE_SIZE=5242880

# Logging level
LOG_LEVEL=info

# ==========================================
# PRODUCTION CHECKLIST
# ==========================================
# 
# Before deploying to production:
# [ ] Change ADMIN_SECRET to a secure value
# [ ] Update HOST to your production domain
# [ ] Configure proper DATABASE_URL for your database
# [ ] Set up HTTPS/SSL certificates
# [ ] Configure CORS_ORIGINS for your domains
# [ ] Set up database backups
# [ ] Configure monitoring and logging
# [ ] Test all functionality in staging environment
# [ ] Set up error tracking (e.g., Sentry)
# [ ] Configure environment-specific rate limits
# [ ] Review and update security headers
#
# Security Notes:
# - Never commit this file with real secrets to version control
# - Use your platform's environment variable management
# - Rotate secrets regularly
# - Use strong, unique passwords for database connections
# - Enable database connection encryption where possible